// 1️ მოთხოვნის შექმნა (Request)
// მომხმარებელი ან პროგრამა აგზავნის მოთხოვნას API-ს URL-ზე.
// მოთხოვნა შეიძლება იყოს GET (მონაცემების მიღება), POST (მონაცემების გაგზავნა) და სხვა.

fetch("https://api.example.com/users") // GET მოთხოვნა
  .then(response => {
    // 2️ პასუხის მიღება (Response)
    // API აბრუნებს პასუხს JSON ფორმატში — ეს არის სტრუქტურირებული მონაცემები.
    return response.json();
  })
  .then(data => {
    // 3️ მონაცემების დამუშავება
    // მიღებული მონაცემები გამოიყენება UI-ში ან სხვა ლოგიკაში.
    console.log(data); // მომხმარებლების სია
  })
  .catch(error => {
    // 4️ შეცდომების მართვა
    // თუ API არ მუშაობს ან URL არასწორია — ვმართავთ შეცდომას.
    console.error("დაფიქსირდა შეცდომა:", error);
  });